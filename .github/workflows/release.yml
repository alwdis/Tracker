name: Release (Windows)

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ELECTRON_BUILDER_DEBUG: "true"
      DEBUG: "electron-builder"
      CSC_IDENTITY_AUTO_DISCOVERY: "false"
      USE_HARD_LINKS: "false"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps (CI)
        run: npm ci

      - name: Build renderer
        run: npm run build

      - name: Print versions
        run: |
          node -v
          npm -v
          npx electron-builder --version

      - name: List build dir (pre-build)
        shell: pwsh
        run: |
          if (Test-Path "build") { Write-Host "`n--- build/ ---"; Get-ChildItem -Recurse -Force build | Select-Object FullName,Length | Format-Table -AutoSize }

      - name: Build & Publish (Windows)
        run: npx electron-builder --win --publish always

      - name: List dist after build
        if: always()
        shell: pwsh
        run: |
          if (Test-Path "dist") { Write-Host "`n--- dist/ ---"; Get-ChildItem -Recurse -Force dist | Select-Object FullName,Length | Format-Table -AutoSize }

      - name: Create Release with Binaries
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.exe
            dist/*.yml
          name: Media Tracker ${{ github.ref_name }}
          body: |
            ## üéâ –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ –≤–µ—Ä—Å–∏–∏ ${{ github.ref_name }}
            
            - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è
            - –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            
            **–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞**: $(date '+%d.%m.%Y')
          generate_release_notes: false
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
