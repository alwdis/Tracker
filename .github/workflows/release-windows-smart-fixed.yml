name: Release (Windows - Smart, Fixed)

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ELECTRON_BUILDER_DEBUG: "true"
      DEBUG: "electron-builder"
      CSC_IDENTITY_AUTO_DISCOVERY: "false"
      USE_HARD_LINKS: "false"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Smart install: npm ci on tags, npm install otherwise
      - name: Install deps (CI on tags)
        if: startsWith(github.ref, 'refs/tags/v')
        run: npm ci

      - name: Install deps (Install on branches/PRs)
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: npm install

      - name: Build renderer (if present)
        run: npm run build --if-present

      - name: Print versions
        run: |
          node -v
          npm -v
          npx electron-builder --version

      - name: List build dir (pre-build)
        shell: pwsh
        run: |
          if (Test-Path "build") { Write-Host "`n--- build/ ---"; Get-ChildItem -Recurse -Force build | Select-Object FullName,Length | Format-Table -AutoSize }

      # âœ… Package only (no publish) on branches/PRs â€” NO `--publish never`
      - name: Package app (no publish)
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: npx electron-builder --win

      - name: Upload dist as artifact (branches/PRs)
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: dist-win
          path: dist/**
          if-no-files-found: error

      # ðŸš€ Build & publish only on tags v*
      - name: Build & Publish (Windows)
        if: startsWith(github.ref, 'refs/tags/v')
        run: npx electron-builder --win --publish always

      - name: List dist after build
        if: always()
        shell: pwsh
        run: |
          if (Test-Path "dist") { Write-Host "`n--- dist/ ---"; Get-ChildItem -Recurse -Force dist | Select-Object FullName,Length | Format-Table -AutoSize }
